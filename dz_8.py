


# 1) Дан список повторяющихся элементов. Вернуть список с дублирующимися элементами.
# В результирующем списке не должно быть дубликатов.
# lst = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]
# print(list(set(x for x in lst if lst.count(x) > 1)))

#===========================================================================================================
# 2) В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых.
# Не учитывать знаки препинания и регистр символов.
# За основу возьмите любую статью из википедии или из документации к языку.
# import re
# from collections import Counter
# def count_top_10_words(text):
# 	cleaned_text = re.sub(r'[^\w\s]', '', text.lower())
# 	words = cleaned_text.split()
# 	word_count = Counter(words)
# 	top_10_words = word_count.most_common(10)
#
# 	return top_10_words
#
#
# # Пример использования
# text = '''Python представляет популярный высокоуровневый язык программирования,"
# который предназначен для создания приложений различных типов. Это и веб-приложения, и игры,
# и настольные программы, и работа с базами данных. Довольно большое распространение питон получил
# в области машинного обучения и исследований искусственного интеллекта.
# Впервые язык Python был анонсирован в 1991 году голландским разработчиком Гвидо Ван Россумом.
# С тех пор данный язык проделал большой путь развития.
# В 2000 году была издана версия 2.0, а в 2008 году - версия 3.0.
# Несмотря на вроде такие большие промежутки между версиями постоянно выходят подверсии.
# Так, текущей актуальной версией на момент написания данного материала является 3.11,
# которая вышла в октябре 2022 года.'''
# top_10_words = count_top_10_words(text)
#
# print(*top_10_words)

#============================================================================================================


# 3) Создайте словарь со списком вещей для похода в качестве ключа и их массой в качестве значения.
# Определите какие вещи влезут в рюкзак передав его максимальную грузоподъёмность.
# Достаточно вернуть один допустимый вариант. *Верните все возможные варианты комплектации рюкзака.

# def find_items(backpack_capacity, items):
# 	backpack_contents = []
# 	total_weight = 0
#
# 	for item, weight in items.items():
# 		if total_weight + weight <= backpack_capacity:
# 			backpack_contents.append(item)
# 			total_weight += weight
#
# 	return backpack_contents
#
#
# items = {
# 	'Тент': 2,
# 	'Спальник': 1,
# 	'Палатка': 3,
# 	'Кружка': 0.5,
# 	'Еда': 4,
# 	'Вода': 2
# }
#
# backpack_capacity = 7
#
# result = find_items(backpack_capacity, items)
# print(result)

